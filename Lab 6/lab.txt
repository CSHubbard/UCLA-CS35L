//Cody Hubbard 004843389
//lab week 6

sort --version
-checks to see the current version of the sort command
	OUPUT: 
	Copyright (C) 2013 Free Software Foundation, Inc.
	License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
	This is free software: you are free to change and redistribute it.
	There is NO WARRANTY, to the extent permitted by law.
-using version 8.22 which is good

man od
od -An -tf4 -N40 < /dev/urandom | tr -s ' ' '\n'
-check od man pagem then test od, -An suppresses memory location output, -tf4 chooses output type 
	(floating point 4 bytes) -N### number of total bytes to read

od -An -tf4 -N40000000 < /dev/urandom | tr -s ' ' '\n' > floats.txt
-create a file of 10000000  random single-precision floating point numbers,
	in textual form, one per line.

wc -l floats.txt
-gave 10000000+1 lines of text

emacs floats.txt
-remove the leading whitespace char

time -p sort -g floats.txt > /dev/null
-time the standard sort command with no (custom) multithreading.
-OUTPUT:
	real 21.48
	user 115.25
	sys 0.47

time -p sort -g --parallel=1 floats.txt > /dev/null
-time sort algorithm with multithreading equal to 1
-OUTPUT:
	real 103.53
	user 103.34
	sys 0.20

time -p sort -g --parallel=2 floats.txt > /dev/null
-time sort algorithm with multithreading equal to 1
-OUTPUT:
	real 55.16
	user 104.64
	sys 0.27

time -p sort -g --parallel=4 floats.txt > /dev/null
-time sort algorithm with multithreading equal to 1
-OUTPUT:
	real 32.99
	user 110.63
	sys 0.38

time -p sort -g --parallel=8 floats.txt > /dev/null
	real 21.01
	user 115.34
	sys 0.46

-this shows that as the number of threads increases the overall system time increases,
	and the real time drasically decreases. However the user time stays realtively close for all
	multithreading variations. User time = total of time used by cpu for all threads.